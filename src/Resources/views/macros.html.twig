{# 菜单项管理显示层级关系 #}
{%- macro menu_item_body(menu_item) %}
    {% import _self as self %}
    <ol class="dd-list">
        {% for children_menu_item in menu_item.children %}
            <li class="dd-item mb-2" data-id="{{ children_menu_item.id }}">
                <a href="#menu_item_{{ children_menu_item.id }}" id="headingMenuItem-{{ children_menu_item.id }}"
                   class="bg-gray-100 d-block card-header py-3 collapsed border rounded-0"
                   data-toggle="collapse" role="button" aria-expanded="false"
                   aria-controls="menu_item_{{ children_menu_item.id }}">
                    <h6 class="m-0 font-weight-bold text-primary">{{ children_menu_item.menuTitle }}</h6>
                </a>
                <div class="accordion-arrow"></div>
                <div id="menu_item_{{ children_menu_item.id }}" class="border border-top-0 collapse"
                     aria-labelledby="headingMenuItem-{{ children_menu_item.id }}"
                     data-parent="#js-nestable-menu">

                    <div class="card-body menu-item-wrapper" data-menu-item-id="{{ children_menu_item.id }}">
                        <div class="form-group row">
                            <label for="menu_link_url_{{ children_menu_item.id }}"
                                   class="col-md-2 col-form-label text-nowrap">{{ 'Link URL'|trans }}</label>
                            <div class="col-md-10">
                                <input id="menu_link_url_{{ children_menu_item.id }}" type="url"
                                       name="menu-item[{{ loop.index0 }}][{{ children_menu_item.id }}][link]"
                                       class="form-control form-control-sm w-100 input-menu-item-link"
                                       value="{{ children_menu_item.menuLink }}">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="menu_link_name_{{ children_menu_item.id }}"
                                   class="col-md-2 col-form-label text-nowrap">{{ 'Link Title'|trans }}</label>
                            <div class="col-md-10">
                                <input id="menu_link_name_{{ children_menu_item.id }}" type="text"
                                       name="menu-item[{{ loop.index0 }}][{{ children_menu_item.id }}][title]"
                                       value="{{ children_menu_item.menuTitle }}"
                                       class="form-control form-control-sm w-100 input-menu-item-title">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="menu_link_attr_title_{{ children_menu_item.id }}"
                                   class="col-md-2 col-form-label text-nowrap">{{ 'Link Attr'|trans }}</label>
                            <div class="col-md-10">
                                <input id="menu_link_attr_title_{{ children_menu_item.id }}" type="text"
                                       name="menu-item[{{ loop.index0 }}][{{ children_menu_item.id }}][title_attr]"
                                       value="{{ children_menu_item.menuTitleAttr }}"
                                       class="form-control form-control-sm w-100 input-menu-item-title-attr">
                            </div>
                        </div>
                        <div class="mt-3">
                            <button type="button" data-menu-item-id="{{ children_menu_item.id }}"
                                    class="btn btn-sm btn-link text-danger p-0 remove-menu-item-btn">
                                <small>{{ 'Remove'|trans }}</small></button>
                        </div>
                    </div>
                </div>
                {% if children_menu_item.hasChildren %}
                    {{ self.menu_item_body(children_menu_item) }}
                {% endif %}
            </li>
        {% endfor %}
    </ol>
{% endmacro -%}

{% macro getAvatar(user, class) %}
    {% set avatar = get_content_field(user, 'user', 'avatar') %}
    {% if avatar is empty or avatar[0].value == null %}
        <img class="img-profile avatar {{ class }}"
             src="{{ asset('bundles/teebbcore/img/avatar/avatar.png') }}">
    {% else %}
        {% set avatarPath = avatar[0].value.filePath %}
        <img class="img-profile avatar {{ class }}"
             src="{{ asset(avatarPath|imagine_filter('squared_thumbnail_small')) }}">
    {% endif %}
{% endmacro %}

{# 评论列表项的显示样式 #}
{% macro commentItemShow(entity_type, comment, redirectBackURI, allowReply ) %}
    {% import _self as self %}
    <div class="author py-2">
        {{ self.getAvatar(comment.author, 'avatar-sm shadow-sm rounded-circle') }}
        <span class="text-dark mr-1">{{ comment.author.firstName ~ comment.author.lastName }}</span>
        <span class="h4 mr-1">发表评论主题《{{ comment.subject }}》</span>
        {{ 'submit_at'|trans }} {{ comment.createdAt|ago }}
    </div>
    <div class="body pl-4 py-2">
        {% set commentDatas = entity_type.allFieldsData(comment, comment.commentType) %}
        {% for fieldAlias, fieldData in commentDatas %}
            {{ self.showFieldData(fieldAlias, fieldData.field_type, fieldData.field_label, fieldData.field, fieldData.data ) }}
        {% endfor %}
        {% if allowReply is defined and allowReply %}
            <div class="py-2">
                {% include '@TeebbCore/comment/buttons/item_comment_button.html.twig' with
                    {'comment': comment, 'redirectBackURI': redirectBackURI} %}
            </div>
        {% endif %}
    </div>
{% endmacro %}

{# 获取并显示当前内容所有字段数据 #}
{% macro showContentAllFieldsData(base_content, bundle, content_type_alias ) %}
    {% import _self as self %}
    {# 获取当前内容所有字段数据 #}
    {% set allFieldsData = show_content_all_fields(base_content, bundle, content_type_alias) %}
    {# 显示当前内容所有字段数据 #}
    {% for fieldAlias, fieldData in allFieldsData %}
        {{ self.showFieldData(fieldAlias, fieldData.field_type, fieldData.field_label, fieldData.field, fieldData.data ) }}
    {% endfor %}
{% endmacro %}

{# 显示内容字段的值和配置，如果是评论字段则获取所有评论内容和设置评论表单 #}
{% macro showFieldData(field_alias, field_type, field_label, field_config, field_data) %}
    {% set field_settings = field_config.settings %}
    {% if field_type == 'boolean' %}
        {% set on_label = field_config.settings.onLabel %}
        {% set off_label = field_config.settings.offLabel %}
        {% if field_settings.showLabel == true %}
            <div class="field_label">{{ field_label }}</div>
        {% endif %}
        <div class="field_items">
            {% for data in field_data %}
                <div class="field_item p-2 pl-0">
                    {% if data.value == true %}
                        {{ on_label }}
                    {% else %}
                        {{ off_label }}
                    {% endif %}
                </div>
            {% endfor %}
        </div>
    {% elseif field_type == 'comment' %}
        {% for data in field_data %}
            {# 显示所有评论 #}
            {% if field_settings.showLabel == true %}
                <h3 class="pb-3 mb-0 border-bottom">{{ field_label }}</h3>
            {% endif %}
            {% set commentType = field_config.settings.commentType.typeAlias %}
            {{ render(path('teebb_comment_index',{
                'bundle': field_config.bundle,
                'typeAlias':field_config.typeAlias,
                'slug': app.request.attributes.get('slug'),
                'commentType' : commentType,
                'fieldAlias': field_alias,
                'redirectBackURI': app.request.pathInfo,
                'allowReply': data.value
            })) }}

            {# 允许新建评论 #}
            {% if data.value == true and is_granted('ROLE_USER') %}
                <h3>{{ 'create'|trans }}{{ field_label }}</h3>
                {{ render(path('teebb_comment_create',{
                    'bundle': field_config.bundle,
                    'typeAlias':field_config.typeAlias,
                    'slug': app.request.attributes.get('slug'),
                    'commentType' : commentType,
                    'fieldAlias': field_alias,
                    'redirectBackURI': app.request.pathInfo
                })) }}
            {% else %}
                {% if data.value == false %}
                    {{ 'Comment is closed'|trans }}
                {% elseif is_granted('ROLE_USER') ==false %}
                    {{ 'Login for submit comment'|trans({'%login%': path('teebb_user_login'), '%redirect_url%': app.request.pathInfo})|raw }}
                {% endif %}
            {% endif %}
        {% endfor %}
    {% elseif field_type == 'datetime' %}
        {% if field_data is not empty %}
            {% if field_settings.showLabel == true %}
                <div class="field_label">{{ field_label }}</div>
            {% endif %}
            <div class="field_items">
                {% for data in field_data %}
                    <div class="field_item p-2 pl-0">
                        {{ data.value|date('Y-m-d H:i:s') }}
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    {% elseif field_type in ['decimal', 'integer', 'float'] %}
        {% if field_data is not empty %}
            {% set prefix = field_config.settings.prefix %}
            {% set suffix = field_config.settings.suffix %}
            {% if field_settings.showLabel == true %}
                <div class="field_label">{{ field_label }}</div>
            {% endif %}
            <div class="field_items">
                {% for data in field_data %}
                    <div class="field_item p-2 pl-0">
                        {{ prefix }}{{ data.value }}{{ suffix }}
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    {% elseif field_type in ['listFloat', 'listInteger'] %}
        {% if field_data is not empty %}
            {% if field_settings.showLabel == true %}
                <div class="field_label">{{ field_label }}</div>
            {% endif %}
            <div class="field_items">
                {% for data in field_data %}
                    {% for item in data.value %}
                        <div class="field_item p-2 pl-0">
                            {{ item }}
                        </div>
                    {% endfor %}
                {% endfor %}
            </div>
        {% endif %}
    {% elseif field_type == 'email' %}
        {% if field_data is not empty %}
            {% if field_settings.showLabel == true %}
                <div class="field_label">{{ field_label }}</div>
            {% endif %}
            <div class="field_items">
                {% for data in field_data %}
                    <div class="field_item p-2 pl-0">
                        <a href="mailto:{{ data.value }}">{{ data.value }}</a>
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    {% elseif field_type == 'link' %}
        {% if field_data is not empty %}
            {% if field_settings.showLabel == true %}
                <div class="field_label">{{ field_label }}</div>
            {% endif %}
            <div class="field_items">
                {% for data in field_data %}
                    <div class="field_item p-2 pl-0">
                        <a target="_blank" href="{{ data.value }}">{{ data.title }}</a>
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    {% elseif field_type == 'referenceImage' %}
        {% if field_data is not empty %}
            {% if field_settings.showLabel == true %}
                <div class="field_label">{{ field_label }}</div>
            {% endif %}
            <div class="field_items">
                {% for data in field_data %}
                    <div class="field_item p-2 pl-0">
                        {% if data.value != null %}
                            <img src="{{ teebb_core.uploadRootUrl ~'/'~data.value.filePath }}" alt="{{ data.alt }}"
                                 title="{{ data.title }}"/>
                        {% endif %}
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    {% elseif field_type == 'referenceFile' %}
        {% if field_data is not empty %}
            {% if field_settings.showLabel == true %}
                <div class="field_label">{{ field_label }}</div>
            {% endif %}
            <div class="field_items">
                {% for data in field_data %}
                    {% if data.showFile == true %}
                        {% if data.value != null %}
                            <div class="field_item p-2 pl-0">
                                <a target="_blank" href="{{ teebb_core.uploadRootUrl ~'/'~data.value.filePath }}">
                                    <i class="fas fa-file"></i>
                                    {% if data.description is not empty %}
                                        {{ data.description }}
                                    {% else %}
                                        {{ data.value.originFileName }}
                                    {% endif %}
                                </a>
                            </div>
                        {% endif %}
                    {% endif %}
                {% endfor %}
            </div>
        {% endif %}
    {% elseif field_type in ['string', 'text', 'stringFormat', 'textFormat'] %}
        {% if field_data is not empty %}
            {% if field_settings.showLabel == true %}
                <div class="field_label">{{ field_label }}</div>
            {% endif %}
            <div class="field_items">
                {% for data in field_data %}
                    <div class="field_item p-2 pl-0">
                        {{ data.value|raw }}
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    {% elseif field_type == 'textFormatSummary' %}
        {% if field_data is not empty %}
            {% if field_settings.showLabel == true %}
                <div class="field_label">{{ field_label }}</div>
            {% endif %}
            <div class="field_items">
                {% for data in field_data %}
                    <div class="field_item p-2 pl-0">
                        {% if data.summary %}
                            <p class="small">
                                {{ 'summary'|trans }}{{ data.summary }}
                            </p>
                        {% endif %}
                        {{ data.value|raw }}
                    </div>
                {% endfor %}
            </div>
        {% endif %}
    {% elseif field_type == 'referenceTaxonomy' %}
        {% if field_data is not empty %}
            {% if field_settings.showLabel == true %}
                <div class="field_label">{{ field_label }}</div>
            {% endif %}
            <div class="field_items d-flex">
                {% for data in field_data %}
                    {% if data.value %}
                        <div class="field_item p-2 pl-0">
                            <a href="{{ path('teebb_taxonomy_contents',{slug:data.value.slug }) }}"
                               class="teebb-bg text-secondary badge bg-light small">{{ data.value.term }}</a>
                        </div>
                    {% endif %}
                {% endfor %}
            </div>
        {% endif %}
    {% elseif field_type == 'referenceContent' %}
        {% if field_data is not empty %}
            {% if field_settings.showLabel == true %}
                <div class="field_label">{{ field_label }}</div>
            {% endif %}
            <div class="field_items">
                {% for data in field_data %}
                    {% if data.value != null %}
                        <div class="field_item p-2 pl-0">
                            <a href="{{ path('teebb_content_show',{slug:data.value.slug }) }}"
                               class="teebb-bg text-secondary badge bg-light small">{{ data.value.title }}</a>
                        </div>
                    {% endif %}
                {% endfor %}
            </div>
        {% endif %}
    {% endif %}
{% endmacro %}

{#获取内容第一个textFormatSummary类型字段摘要#}
{% macro getContentSummary(content, bundle, typeAlias) %}
    {% set textFormatSummarys = get_specify_type_field(content, bundle, typeAlias, 'textFormatSummary') %}
    {% for textFormatSummaryData in textFormatSummarys %}
        {% if loop.first %}
            {% if textFormatSummaryData[0].value %}
                {{ textFormatSummaryData[0].summary }}
            {% endif %}
        {% endif %}
    {% endfor %}
{% endmacro %}